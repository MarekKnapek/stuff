#include <string>
#include <cassert>
#include <cstring>

#include "Hasher.h"
#include "MD5Hasher.h"
#include "SHA256Hasher.h"

int main()
{
	using namespace ::std;

	string str;

	MD5Hasher::Digest md5digest;
	{
		MD5Hasher hasher;
		str = "The quick brown fox jumps over the lazy dog";
		add_to_hash(hasher, str);
		md5digest = hasher.finish();
		unsigned char const etalon[] = {0x9e, 0x10, 0x7d, 0x9d, 0x37, 0x2b, 0xb6, 0x82, 0x6b, 0xd8, 0x1d, 0x35, 0x42, 0xa4, 0x19, 0xd6};
		assert(memcmp(md5digest.data(), etalon, md5digest.size()) == 0);
	}
	{
		MD5Hasher hasher;
		str = "The quick brown fox jumps over the lazy dog.";
		add_to_hash(hasher, str);
		md5digest = hasher.finish();
		unsigned char const etalon[] = {0xe4, 0xd9, 0x09, 0xc2, 0x90, 0xd0, 0xfb, 0x1c, 0xa0, 0x68, 0xff, 0xad, 0xdf, 0x22, 0xcb, 0xd0};
		assert(memcmp(md5digest.data(), etalon, md5digest.size()) == 0);
	}
	{
		MD5Hasher hasher;
		md5digest = hasher.finish();
		unsigned char const etalon[] = {0xd4, 0x1d, 0x8c, 0xd9, 0x8f, 0x00, 0xb2, 0x04, 0xe9, 0x80, 0x09, 0x98, 0xec, 0xf8, 0x42, 0x7e};
		assert(memcmp(md5digest.data(), etalon, md5digest.size()) == 0);
	}

	SHA256Hasher::Digest sha256digest;
	{
		SHA256Hasher hasher;
		sha256digest = hasher.finish();
		unsigned char const etalon[] = {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55};
		assert(memcmp(sha256digest.data(), etalon, sha256digest.size()) == 0);
	}
	{
		SHA256Hasher hasher;
		str = "etalon";
		add_to_hash(hasher, str);
		sha256digest = hasher.finish();
		unsigned char const etalon[] = {0x17, 0x90, 0x75, 0xad, 0x0f, 0x5a, 0xd9, 0xea, 0x34, 0xbb, 0x3f, 0xe6, 0xa6, 0xb4, 0x8b, 0x0a, 0x17, 0xf7, 0x5f, 0x3a, 0xcb, 0x1c, 0xdd, 0xcc, 0xde, 0x51, 0xe4, 0x9e, 0x57, 0xe7, 0x3a, 0xed};
		assert(memcmp(sha256digest.data(), etalon, sha256digest.size()) == 0);
	}
}
